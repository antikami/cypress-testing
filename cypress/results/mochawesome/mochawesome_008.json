{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-08-05T22:49:36.526Z",
    "end": "2024-08-05T22:49:37.339Z",
    "duration": 813,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2173bc21-8f1e-4376-97ef-69f4dbb4e8ab",
      "title": "",
      "fullFile": "cypress\\e2e\\apiShowcase.spec.js",
      "file": "cypress\\e2e\\apiShowcase.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e4d7501-bbd8-4fda-8e1c-dee43c9b5661",
          "title": "API test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "first test",
              "fullTitle": "API test suite first test",
              "timedOut": null,
              "duration": 781,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUSH',\n  url: `${baseUrl}`,\n  header: {\n    'accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: [{\n    'id': 1\n  }]\n}).then(reponse => {\n  expect(reponse.status).to.eq(200);\n});\ncy.request({\n  method: 'POST',\n  url: `${baseUrl}/user/createWithList`,\n  header: {\n    'accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: [{\n    \"id\": 1,\n    \"username\": \"Erudes\",\n    \"firstName\": \"Zdenek\",\n    \"lastName\": \"Trnka\",\n    \"email\": \"email@email.cz\",\n    \"password\": \"eslo\",\n    \"phone\": \"123455\",\n    \"userStatus\": 1\n  }]\n}).then(response => {\n  expect(response.status).to.eq(200);\n});\ncy.wait(2000);\ncy.request({\n  method: 'GET',\n  url: `https://petstore.swagger.io/v2/user/${userName}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(responseUser => {\n  expect(responseUser.status).to.equal(200);\n  expect(responseUser.body).to.have.property('id', 1);\n  expect(responseUser.body).to.have.property('email', 'email@email.cz');\n  expect(responseUser.body).to.have.property('password', 'eslo');\n});\n//user login\ncy.request({\n  method: 'GET',\n  url: 'https://petstore.swagger.io/v2/user/login?username=Erudes&password=eslo',\n  headers: {\n    accept: 'application/json'\n  }\n}).then(userLogin => {\n  expect(userLogin.status).to.equal(200);\n});\ncy.request({\n  method: 'DELETE',\n  url: 'https://petstore.swagger.io/v2/user/Erudes',\n  headers: {\n    accept: 'application/json'\n  }\n}).then(deleteUser => {\n  expect(deleteUser.status).to.equal(200);\n});\ncy.request({\n  method: 'GET',\n  url: 'https://petstore.swagger.io/v2/user/Erudes',\n  failOnStatusCode: false,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(getUser => {\n  expect(getUser.status).to.equal(404);\n});",
              "err": {
                "message": "CypressError: `cy.request()` was called with an invalid method: `PUSH`. Method can be: `GET`, `POST`, `PUT`, `DELETE`, `PATCH`, `HEAD`, `OPTIONS`, or any other method supported by Node's HTTP parser.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` was called with an invalid method: `PUSH`. Method can be: `GET`, `POST`, `PUT`, `DELETE`, `PATCH`, `HEAD`, `OPTIONS`, or any other method supported by Node's HTTP parser.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:4200/__cypress/runner/cypress_runner.js:132950:70)\n    at wrapped (http://localhost:4200/__cypress/runner/cypress_runner.js:138395:43)\nFrom Your Spec Code:\n    at Context.eval (webpack://ngx-admin/./cypress/e2e/apiShowcase.spec.js:13:13)",
                "diff": null
              },
              "uuid": "2505f308-fd80-4d8c-81c4-440016d3c997",
              "parentUUID": "5e4d7501-bbd8-4fda-8e1c-dee43c9b5661",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2505f308-fd80-4d8c-81c4-440016d3c997"
          ],
          "pending": [],
          "skipped": [],
          "duration": 781,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}